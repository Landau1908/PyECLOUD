PyECLOUD Version 4.06beta
Parsing beam file: beam.beam
Starting pyecloud_saver init.
Using fast polygon
Start beam profile generation.
Beam profile generation 0%
Beam profile generation 50%
Done beam profile generation.
No beam field file provided -> Calculate field using Poisson solver
Start LU space charge init.
Using Shortley-Weller boundary approx.
Mat. assembly 0%
Mat. assembly 5%
Mat. assembly 10%
Mat. assembly 15%
Mat. assembly 20%
Mat. assembly 25%
Mat. assembly 30%
Mat. assembly 35%
Mat. assembly 40%
Mat. assembly 45%
Mat. assembly 50%
Mat. assembly 55%
Mat. assembly 60%
Mat. assembly 65%
Mat. assembly 70%
Mat. assembly 75%
Mat. assembly 80%
Mat. assembly 85%
Mat. assembly 90%
Mat. assembly 95%
Mat. assembly 100%
Internal nodes with 0 potential
[21691, 21981, 38172, 38530, 126252, 126610, 142801, 143091]
Using scipy superlu solver...
Done space charge init.
Computing beam charge density
Start Linear System Solution.
Start field computation.
Done beam field computation.
Start LU space charge init.
Using Shortley-Weller boundary approx.
Mat. assembly 0%
Mat. assembly 5%
Mat. assembly 10%
Mat. assembly 15%
Mat. assembly 20%
Mat. assembly 25%
Mat. assembly 30%
Mat. assembly 35%
Mat. assembly 40%
Mat. assembly 45%
Mat. assembly 50%
Mat. assembly 55%
Mat. assembly 60%
Mat. assembly 65%
Mat. assembly 70%
Mat. assembly 75%
Mat. assembly 80%
Mat. assembly 85%
Mat. assembly 90%
Mat. assembly 95%
Mat. assembly 100%
Internal nodes with 0 potential
[1560, 1618, 41204, 41262]
Using scipy superlu solver...
Done space charge init.
Start impact man. init.
Done impact man. init.
Start pyecloud_saver observation
Done init pyecloud_saver.
Tracker: Boris multipole
Tracker: Fix the dipole!!!!!!!!!!!
N_subst_init=5
Start timestep iter
Start clean. N_mp=72911 Nel=1.011205e+06
Done clean. N_mp=72783 Nel=1.011205e+06
**** Done pass_numb = 1/2

Start clean. N_mp=80328 Nel=1.100134e+06
Done clean. N_mp=80028 Nel=1.100134e+06
Start SOFT regeneration. N_mp=80028 Nel_tot=1.10e+06 En_tot=2.34e+07
Applied correction factor = 3.155584e+00
Done SOFT regeneration. N_mp=25407 Nel_tot=1.10e+06 En_tot=2.32e+07
**** Done pass_numb = 2/2

Wrote profile results to mainprof.py.lprof
Timer unit: 1e-06 s

File: mainprof.py
Function: mainfun at line 67
Total time: 189.226 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    67                                           @profile
    68                                           def mainfun(beamtim,MP_e, dynamics,impact_man, pyeclsaver, \
    69                                                   gas_ion_flag, resgasion, t_ion, \
    70                                                   spacech_ele,t_sc_ON, photoem_flag, phemiss,\
    71                                                   flag_presence_sec_beams, sec_beams_list):
    72         1           21     21.0      0.0  	print 'Start timestep iter'
    73                                           
    74                                           	## simulation
    75     10203       129538     12.7      0.1  	while not beamtim.end_simulation():
    76                                           		
    77     10202       266725     26.1      0.1  		beamtim.next_time_step()
    78                                           		
    79     10202        95389      9.4      0.1  		if flag_presence_sec_beams:
    80                                           			for sec_beam in sec_beams_list:
    81                                           				sec_beam.next_time_step()
    82                                           		
    83                                           		
    84                                           		## compute beam electric field (main and secondary beams)
    85     10202      8322824    815.8      4.4  		Ex_n_beam, Ey_n_beam = beamtim.get_beam_eletric_field(MP_e)
    86                                           		
    87     10202        93059      9.1      0.0  		if flag_presence_sec_beams:
    88                                           			for sec_beam in sec_beams_list:
    89                                           				Ex_n_secbeam, Ey_n_secbeam = sec_beam.get_beam_eletric_field(MP_e)
    90                                           				Ex_n_beam+=Ex_n_secbeam
    91                                           				Ey_n_beam+=Ey_n_secbeam
    92                                           		
    93                                           		## compute electron space charge electric field
    94     10202     27106003   2656.9     14.3  		Ex_sc_n, Ey_sc_n = spacech_ele.get_sc_eletric_field(MP_e)
    95                                           		
    96                                           		## Total electric field
    97     10202      1176785    115.3      0.6  		Ex_n=Ex_sc_n+Ex_n_beam;
    98     10202      1083872    106.2      0.6  		Ey_n=Ey_sc_n+Ey_n_beam;
    99                                           			
   100                                           		## save position before motion step
   101     10202      3308590    324.3      1.7  		old_pos=MP_e.get_positions()
   102                                           		
   103                                           		## motion
   104     10202     44410695   4353.1     23.5  		MP_e = dynamics.step(MP_e, Ex_n, Ey_n);
   105                                           		
   106                                           		## impacts: backtracking and secondary emission
   107     10202     74773933   7329.3     39.5  		MP_e = impact_man.backtrack_and_second_emiss(old_pos, MP_e)
   108                                           	 
   109                                           		
   110                                           		## gas ionization (main and secondary beams)
   111     10202       124641     12.2      0.1  		if(beamtim.tt_curr<t_ion and gas_ion_flag==1):
   112                                           			MP_e = resgasion.generate(MP_e, beamtim.lam_t_curr, beamtim.Dt,beamtim.sigmax, beamtim.sigmay, 
   113                                           									x_beam_pos = beamtim.x_beam_pos, y_beam_pos = beamtim.y_beam_pos)
   114                                           			if flag_presence_sec_beams:
   115                                           				for sec_beam in sec_beams_list:
   116                                           					MP_e = resgasion.generate(MP_e, sec_beam.lam_t_curr, sec_beam.Dt,sec_beam.sigmax, sec_beam.sigmay, 
   117                                           									x_beam_pos = sec_beam.x_beam_pos, y_beam_pos = sec_beam.y_beam_pos)
   118                                           			
   119                                           					
   120                                           		 
   121                                           		## photoemission (main and secondary beams)  
   122     10202        92347      9.1      0.0  		if(photoem_flag==1):
   123                                           			lam_curr_phem = beamtim.lam_t_curr
   124                                           			if flag_presence_sec_beams:
   125                                           				for sec_beam in sec_beams_list:
   126                                           					lam_curr_phem += sec_beam.lam_t_curr
   127                                           			MP_e = phemiss.generate(MP_e, lam_curr_phem, beamtim.Dt)
   128                                           
   129                                           			
   130                                           		## Compute space charge field
   131     10202        94044      9.2      0.0  		if (beamtim.tt_curr>t_sc_ON):
   132     10201      1547003    151.7      0.8  			spacech_ele.recompute_spchg_efield(MP_e, t_curr=beamtim.tt_curr)
   133                                           			
   134                                           		
   135                                           		## savings
   136     10202       100235      9.8      0.1  		impact_man = pyeclsaver.witness(MP_e, beamtim, spacech_ele, impact_man, dynamics,gas_ion_flag,
   137     10202        93135      9.1      0.0  										resgasion,t_ion,t_sc_ON, photoem_flag, phemiss,
   138     10202     23274099   2281.3     12.3  										flag_presence_sec_beams,sec_beams_list)
   139                                           		
   140                                           		
   141                                           		## every bunch passage
   142     10202        96627      9.5      0.1  		if beamtim.flag_new_bunch_pass:
   143                                           
   144                                           			## clean
   145         2      1833670 916835.0      1.0  			MP_e.clean_small_MPs()
   146                                           			
   147                                           			## regeneration
   148         2           75     37.5      0.0  			MP_e.check_for_regeneration()
   149                                           			
   150                                           			## soft regeneration
   151         2      1202713 601356.5      0.6  			MP_e.check_for_soft_regeneration()        
   152                                           			
   153         2           32     16.0      0.0  			print '**** Done pass_numb = %d/%d\n'%(beamtim.pass_numb,beamtim.N_pass_tot)

